<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         metadata-complete="true" version="3.0">

    <!-- springmvc 配置 前台 -->
    <servlet>
        <servlet-name>spring-dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>spring-dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>hibernateFilter</filter-name>
        <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>hibernateFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--   ,classpath:/infrastructure.xml 。  classpath:/dubbo-provider.xml已经在InitDubborProvider中设置启动了！       -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:/applicationContext.xml </param-value>
    </context-param>

    <!-- 以下3项参数与log4j的配置相关 把log4j的配置放到org.springframework.web.context.ContextLoaderListener之前-->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:/log4j.properties</param-value>
    </context-param>
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>
    <listener>
        <listener-class>
            org.springframework.web.util.Log4jConfigListener
        </listener-class>
    </listener>
    <!-- end -->

    <!--1.每个应用启动之后，服务器会创建一个“上下文”给它，通俗点讲，就是服务器给开辟了一个地方供应用放存取一些键值对数值。这个上下文叫servletContext。
        服务器先会读取<context-param>里的键值对。这些键值对就存放在servletContext中，可被servletContext实例读取和解析，从而
        访问到<context-param>键值(指定配置文件的地址)。大名鼎鼎的spring通常都是依靠listener来添加到我们的MVC系统里来启动的。这个listener类启动后会
        加载spring自己的容器WebApplicationContext，也就是IoC容器。保存在servletContext中。
        2.listener之后就是filter了: 指定一个类当filter，当然要实现接口。然后指定这个类拦截哪些url，是否登陆，身份验证等经常用到。框架struts2就是用filter来实现拦截请求然后交给struts核心去处理的。
        3.最后是servlet，这就是基本内容了，刚开始学习EE时搭建的网站肯定都是sevlet+jsp起来的。servlet就是最早最基本的控制器，不过框架接手这些事情后，servlet往往都不用写了
    -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

</web-app>
